package com.example.michal.siema;import android.content.Intent;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.graphics.drawable.BitmapDrawable;import android.net.Uri;import android.os.Bundle;import android.os.Environment;import android.os.StrictMode;import android.provider.MediaStore;import android.support.v7.app.ActionBarActivity;import android.view.View;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.Button;import android.widget.EditText;import android.widget.ImageView;import android.widget.Spinner;import android.widget.TextView;import android.widget.Toast;import java.io.ByteArrayOutputStream;import java.io.File;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;import java.sql.Connection;import java.sql.DriverManager;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Statement;public class Dodawanie extends ActionBarActivity {    Connection connection = null;    int baza=0;    Statement st;    PreparedStatement ps;    ResultSet rs;    String kategoria = null;    String skladniki = null;    String cena = null;    String nazwa = null;    String zdjecie = "";    String sql;    private static final String SAMPLE_DB_NAME = "Restalracja";    private static final int CAMERA_PIC_REQUEST = 1111;    TextView text,txt;    Button button1, button2, button3, button4;    EditText text1, text2, text3;    ImageView Obraz;    Bitmap thumbnail;    Bundle applesData;    Intent intent;    String posilek;    FileInputStream fis = null;    File file;    Spinner spnr;    String[] celebrities = {            "Przystawki", "Makarony", "Ryba", "Salatki", "Fast_Food", "Pizza", "Zupy",            "Suszi", "Wina", "Piwo", "Desery", "Dodatki",            "Napoje_Gazowane", "Napoje_Zimne", "Napje_Gorace", "Soki"};    private void showToast(String message) {        Toast.makeText(getApplicationContext(),                message,                Toast.LENGTH_LONG).show();    }    public void connect() {        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();        StrictMode.setThreadPolicy(policy);        try {            Class.forName("com.mysql.jdbc.Driver");        } catch (ClassNotFoundException e) {            return;        }        try {            connection = DriverManager.getConnection("jdbc:mysql://85.10.205.173/restalracja1234", "michal3898", "kaseta12");        } catch (SQLException e) {            showToast("Brak polaczenia z internetem");            return;        }    }    public void SaveSqlLigt()    {        try {            SQLiteDatabase sampleDB = this.openOrCreateDatabase(SAMPLE_DB_NAME, MODE_PRIVATE, null);            if(baza==1){                nazwa = text1.getText().toString();                skladniki = text2.getText().toString();                cena = text3.getText().toString();                sampleDB.execSQL("INSERT INTO " + kategoria + " (Nazwa,Skladniki,Zdjecie,Cena) VALUES ('"+nazwa+"','"+skladniki+"','"+zdjecie+"','"+cena+"') ");            }            if(baza==2)            {                nazwa = text1.getText().toString();                skladniki = text2.getText().toString();                cena = text3.getText().toString();                sampleDB.execSQL("DELETE FROM " + kategoria + " WHERE Nazwa =('" + nazwa + "') ");            }            if(baza==4)            {                sampleDB.execSQL("DELETE FROM " + kategoria + " WHERE Nazwa =('" + nazwa + "') ");                nazwa = text1.getText().toString();                skladniki = text2.getText().toString();                cena = text3.getText().toString();                sampleDB.execSQL("INSERT INTO " + kategoria + " (Nazwa,Skladniki,Zdjecie,Cena) VALUES ('"+nazwa+"','"+skladniki+"','"+zdjecie+"','"+cena+"') ");            }            sampleDB.close();        }catch (Exception e){showToast("Blad w sqlLight");}    }    public void connectToDataBase() {        connect();        if (connection != null) {            try {                st = connection.createStatement();            } catch (SQLException e1) {                //e1.printStackTrace();            }            skladniki = text2.getText().toString();            cena = text3.getText().toString();            if(baza==1) {                nazwa = text1.getText().toString();             //   sql = +                 //       "VALUES ('" + nazwa + "', '" + skladniki + "', '" + cena + "', '" + (InputStream)fis + "')";                sql = "INSERT INTO " + kategoria + " (Nazwa,Skladniki,Cena,Zdjecie) VALUES (?,?,?,?) ";                try {                    connection.setAutoCommit(false);                    File file =new File(zdjecie);                    try {                        fis = new FileInputStream(file);                    } catch (FileNotFoundException e) {                    }                    ps = connection.prepareStatement(sql);                    ps.setString(1,nazwa);                    ps.setString(2,skladniki);                    ps.setString(3,cena);                    ps.setBinaryStream(4, fis,(int) file.length());                    ps.executeUpdate();                    connection.commit();                } catch (SQLException e) {                }                finally {                    try {                        ps.close();                    } catch (SQLException e) {                    }                    try {                        fis.close();                    } catch (IOException e) {                    }                }            }            //usuwanie określonej pozycji z menu            if(baza==2) {                nazwa = text1.getText().toString();                sql ="DELETE FROM " + kategoria + " WHERE Nazwa =('" + nazwa + "')";                try {                    st.executeUpdate(sql);                } catch (SQLException e1) {                    e1.printStackTrace();                }            }            //zamiana okreslonej pozycji z menu            if(baza==4){                sql ="DELETE FROM " + kategoria + " WHERE Nazwa =('" + nazwa + "')";                try {                    st.executeUpdate(sql);                } catch (SQLException e1) {                    e1.printStackTrace();                }            }        }        try {            if (connection != null)                connection.close();        } catch (SQLException se) {            showToast("brak połączenia z internetem");        }    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_dodawanie);        button1 = (Button) findViewById(R.id.but1);        button2 = (Button) findViewById(R.id.but2);        button3 = (Button) findViewById(R.id.but3);        button4 = (Button) findViewById(R.id.but4);        text = (TextView) findViewById(R.id.textView21);        txt = (TextView) findViewById(R.id.textView16);        text1 = (EditText) findViewById(R.id.editTextN);        text2 = (EditText) findViewById(R.id.editTextS);        text3 = (EditText) findViewById(R.id.editTextC);        Obraz = (ImageView) findViewById(R.id.imageView2);        applesData = getIntent().getExtras();        posilek = applesData.getString("warunek");        kategoria = applesData.getString("kategoria");        if(posilek.equals("false")) {            txt.setText("Dodaj do menu");            button3.setBackgroundResource(R.drawable.plus1);        }        if(posilek.equals("true")) {            nazwa = applesData.getString("nazwa");            cena = applesData.getString("cena");            zdjecie = applesData.getString("zdjecie");            skladniki = applesData.getString("skladniki");            button3.setBackgroundResource(R.drawable.minus1);            button1.setVisibility(View.GONE);            button2.setVisibility(View.GONE);            text.setVisibility(View.GONE);            txt.setText("Usuń z menu");            text1.setText(nazwa);            text2.setText(skladniki);            text3.setText(cena);            thumbnail = (BitmapFactory.decodeFile(zdjecie));            Obraz.setBackground(new BitmapDrawable(getResources(), Bitmap.createScaledBitmap(thumbnail, 300, 250, true)));        }        if(posilek.equals("ttrue")) {            nazwa = applesData.getString("nazwa");            cena = applesData.getString("cena");            zdjecie = applesData.getString("zdjecie");            skladniki = applesData.getString("skladniki");            button3.setBackgroundResource(R.drawable.plus1);            txt.setText("Poprawka przepisu");            text1.setText(nazwa);            text2.setText(skladniki);            text3.setText(cena);            thumbnail = (BitmapFactory.decodeFile(zdjecie));            Obraz.setBackground(new BitmapDrawable(getResources(), Bitmap.createScaledBitmap(thumbnail, 300, 250, true)));        }        spnr = (Spinner) findViewById(R.id.spinerdod);        ArrayAdapter<String> adapter = new ArrayAdapter<String>(                this, R.layout.simple_spinner_item, celebrities);        //obsługa listy ,dodawanie nowych logów        spnr.setAdapter(adapter);        int spinnerPostion = adapter.getPosition(kategoria);        spnr.setSelection(spinnerPostion);        spinnerPostion = 0;        spnr.setOnItemSelectedListener(                new AdapterView.OnItemSelectedListener() {                    @Override                    public void onItemSelected(AdapterView<?> arg0, View arg1,                                               int arg2, long arg3) {                        int position = spnr.getSelectedItemPosition();                        kategoria = celebrities[+position];                    }                    @Override                    public void onNothingSelected(AdapterView<?> arg0) {                    }                }        );        //wywołanie metody robienie zdjęcia i zapisywanie go        button1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);                startActivityForResult(intent, CAMERA_PIC_REQUEST);            }        });        //wywołanie metody dodawania zdjęcia z galeri        button2.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                intent = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);                startActivityForResult(intent, 2);            }        });        //wstawianie danych na serwer        button3.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(posilek.equals("false")){                baza=1;                    SaveSqlLigt();                connectToDataBase();                }                if(posilek.equals("true")){                baza=2;                connectToDataBase();                SaveSqlLigt();}                if(posilek.equals("ttrue")){                    baza = 4;                    connectToDataBase();                    baza = 1;                    connectToDataBase();                    SaveSqlLigt();                }            }        });        //przejscie do następnego layoutu        button4.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {             //   baza=3;             //   connectToDataBase();                Intent i = new Intent(Dodawanie.this, Karta.class);                startActivity(i);            }        });    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        //Robienie zdjęcia i zapisywanie go        if (requestCode == CAMERA_PIC_REQUEST) {            //2            thumbnail = (Bitmap) data.getExtras().get("data");            Obraz.setBackground(new BitmapDrawable(getResources(), Bitmap.createScaledBitmap(thumbnail, 300, 250, true)));            //3            ByteArrayOutputStream bytes = new ByteArrayOutputStream();            thumbnail.compress(Bitmap.CompressFormat.JPEG, 100, bytes);            //4            //nazwa = text1.getText().toString();            File file = new File(Environment.getExternalStorageDirectory() + File.separator + nazwa);            try {                file.createNewFile();                FileOutputStream fo = new FileOutputStream(file);                //5                fo.write(bytes.toByteArray());                fo.close();            } catch (IOException e) {                // TODO Auto-generated catch block                e.printStackTrace();            }            zdjecie=String.valueOf(file);        }        //pobieranie zdjęcia z galerii            else if (requestCode == 2) {                Uri selectedImage = data.getData();                String[] filePath = {MediaStore.Images.Media.DATA};                Cursor c = getContentResolver().query(selectedImage, filePath, null, null, null);                c.moveToFirst();                int columnIndex = c.getColumnIndex(filePath[0]);                String picturePath = c.getString(columnIndex);                zdjecie=picturePath;                c.close();            thumbnail = (BitmapFactory.decodeFile(picturePath));                Obraz.setBackground(new BitmapDrawable(getResources(), Bitmap.createScaledBitmap(thumbnail, 300, 250, true)));            }        }    }